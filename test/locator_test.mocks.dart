// Mocks generated by Mockito 5.4.5 from annotations
// in esim_open_source/test/locator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i6;

import 'package:device_info_plus/device_info_plus.dart' as _i2;
import 'package:esim_open_source/data/remote/auth_reload_interface.dart'
    as _i32;
import 'package:esim_open_source/data/remote/request/device/device_info_request_model.dart'
    as _i44;
import 'package:esim_open_source/data/remote/request/related_search.dart'
    as _i36;
import 'package:esim_open_source/data/remote/responses/account/account_model.dart'
    as _i61;
import 'package:esim_open_source/data/remote/responses/auth/auth_response_model.dart'
    as _i27;
import 'package:esim_open_source/data/remote/responses/base_response_model.dart'
    as _i49;
import 'package:esim_open_source/data/remote/responses/bundles/bundle_consumption_response.dart'
    as _i39;
import 'package:esim_open_source/data/remote/responses/bundles/bundle_response_model.dart'
    as _i51;
import 'package:esim_open_source/data/remote/responses/bundles/country_response_model.dart'
    as _i56;
import 'package:esim_open_source/data/remote/responses/bundles/regions_response_model.dart'
    as _i57;
import 'package:esim_open_source/data/remote/responses/user/order_history_response_model.dart'
    as _i42;
import 'package:esim_open_source/data/remote/responses/user/user_notification_response.dart'
    as _i41;
import 'package:esim_open_source/data/remote/unauthorized_access_interface.dart'
    as _i31;
import 'package:esim_open_source/data/services/connectivity_service_impl.dart'
    as _i29;
import 'package:esim_open_source/domain/data/api_bundles.dart' as _i34;
import 'package:esim_open_source/domain/data/api_user.dart' as _i35;
import 'package:esim_open_source/domain/repository/api_app_repository.dart'
    as _i33;
import 'package:esim_open_source/domain/repository/api_auth_repository.dart'
    as _i30;
import 'package:esim_open_source/domain/repository/api_bundles_repository.dart'
    as _i37;
import 'package:esim_open_source/domain/repository/api_device_repository.dart'
    as _i43;
import 'package:esim_open_source/domain/repository/api_user_repository.dart'
    as _i40;
import 'package:esim_open_source/domain/repository/services/app_configuration_service.dart'
    as _i28;
import 'package:esim_open_source/domain/repository/services/connectivity_service.dart'
    as _i12;
import 'package:esim_open_source/domain/repository/services/device_info_service.dart'
    as _i21;
import 'package:esim_open_source/domain/repository/services/flutter_channel_handler_service.dart'
    as _i19;
import 'package:esim_open_source/domain/repository/services/local_storage_service.dart'
    as _i5;
import 'package:esim_open_source/domain/repository/services/payment_service.dart'
    as _i16;
import 'package:esim_open_source/domain/repository/services/push_notification_service.dart'
    as _i23;
import 'package:esim_open_source/domain/repository/services/redirections_handler_service.dart'
    as _i18;
import 'package:esim_open_source/domain/repository/services/secure_storage_service.dart'
    as _i25;
import 'package:esim_open_source/domain/repository/services/social_login_service.dart'
    as _i24;
import 'package:esim_open_source/domain/use_case/app/add_device_use_case.dart'
    as _i3;
import 'package:esim_open_source/domain/use_case/user/get_bundle_label_use_case.dart'
    as _i9;
import 'package:esim_open_source/domain/use_case/user/get_user_notifications_use_case.dart'
    as _i8;
import 'package:esim_open_source/domain/util/resource.dart' as _i4;
import 'package:esim_open_source/presentation/enums/dialog_icon_type.dart'
    as _i53;
import 'package:esim_open_source/presentation/enums/view_state.dart' as _i50;
import 'package:esim_open_source/presentation/extensions/stacked_services/custom_route_observer.dart'
    as _i13;
import 'package:esim_open_source/presentation/reactive_service/bundles_data_service.dart'
    as _i38;
import 'package:esim_open_source/presentation/reactive_service/user_authentication_service.dart'
    as _i17;
import 'package:esim_open_source/presentation/reactive_service/user_service.dart'
    as _i15;
import 'package:esim_open_source/presentation/setup_dialog_ui.dart' as _i52;
import 'package:esim_open_source/presentation/shared/in_app_redirection_heper.dart'
    as _i26;
import 'package:esim_open_source/presentation/view_models/main_model.dart'
    as _i46;
import 'package:esim_open_source/presentation/views/home_flow_views/data_plans_view/data_plans_view_model.dart'
    as _i55;
import 'package:esim_open_source/presentation/views/home_flow_views/data_plans_view/purchase_loading_view/purchase_loading_view_model.dart'
    as _i60;
import 'package:esim_open_source/presentation/views/home_flow_views/main_page/home_pager_view_model.dart'
    as _i58;
import 'package:esim_open_source/presentation/views/home_flow_views/my_esim_view/my_esim_view_model.dart'
    as _i10;
import 'package:esim_open_source/presentation/views/home_flow_views/profile_view/profile_view_model.dart'
    as _i54;
import 'package:esim_open_source/presentation/widgets/lockable_tab_bar.dart'
    as _i59;
import 'package:flutter/material.dart' as _i20;
import 'package:http/http.dart' as _i48;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i22;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i62;
import 'package:stacked/stacked.dart' as _i47;
import 'package:stacked_services/stacked_services.dart' as _i11;
import 'package:stacked_themes/src/theme_manager.dart' as _i45;
import 'package:stacked_themes/stacked_themes.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceInfoPlugin_0 extends _i1.SmartFake
    implements _i2.DeviceInfoPlugin {
  _FakeDeviceInfoPlugin_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddDeviceParams_1 extends _i1.SmartFake
    implements _i3.AddDeviceParams {
  _FakeAddDeviceParams_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResource_2<T> extends _i1.SmartFake implements _i4.Resource<T> {
  _FakeResource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorageService_3 extends _i1.SmartFake
    implements _i5.LocalStorageService {
  _FakeLocalStorageService_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_4 extends _i1.SmartFake implements _i6.Locale {
  _FakeLocale_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_5<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserNotificationsUseCase_6 extends _i1.SmartFake
    implements _i8.GetUserNotificationsUseCase {
  _FakeGetUserNotificationsUseCase_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBundleLabelUseCase_7 extends _i1.SmartFake
    implements _i9.GetBundleLabelUseCase {
  _FakeGetBundleLabelUseCase_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeESimState_8 extends _i1.SmartFake implements _i10.ESimState {
  _FakeESimState_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDialogService_9 extends _i1.SmartFake implements _i11.DialogService {
  _FakeDialogService_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnackbarService_10 extends _i1.SmartFake
    implements _i11.SnackbarService {
  _FakeSnackbarService_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivityService_11 extends _i1.SmartFake
    implements _i12.ConnectivityService {
  _FakeConnectivityService_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBottomSheetService_12 extends _i1.SmartFake
    implements _i11.BottomSheetService {
  _FakeBottomSheetService_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_13 extends _i1.SmartFake
    implements _i11.NavigationService {
  _FakeNavigationService_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationRouter_14 extends _i1.SmartFake
    implements _i13.NavigationRouter {
  _FakeNavigationRouter_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeService_15 extends _i1.SmartFake implements _i14.ThemeService {
  _FakeThemeService_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserService_16 extends _i1.SmartFake implements _i15.UserService {
  _FakeUserService_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentService_17 extends _i1.SmartFake
    implements _i16.PaymentService {
  _FakePaymentService_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserAuthenticationService_18 extends _i1.SmartFake
    implements _i17.UserAuthenticationService {
  _FakeUserAuthenticationService_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRedirectionsHandlerService_19 extends _i1.SmartFake
    implements _i18.RedirectionsHandlerService {
  _FakeRedirectionsHandlerService_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddDeviceUseCase_20 extends _i1.SmartFake
    implements _i3.AddDeviceUseCase {
  _FakeAddDeviceUseCase_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterChannelHandlerService_21 extends _i1.SmartFake
    implements _i19.FlutterChannelHandlerService {
  _FakeFlutterChannelHandlerService_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColor_22 extends _i1.SmartFake implements _i6.Color {
  _FakeColor_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_23 extends _i1.SmartFake
    implements _i20.TextEditingController {
  _FakeTextEditingController_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationRouter extends _i1.Mock implements _i13.NavigationRouter {
  MockNavigationRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  bool isPageVisible(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #isPageVisible,
          [routeName],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setIsPageVisible({
    required bool? value,
    required bool? notifyChanges,
    String? routeName,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setIsPageVisible,
          [],
          {
            #value: value,
            #notifyChanges: notifyChanges,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CustomRouteObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomRouteObserver extends _i1.Mock
    implements _i13.CustomRouteObserver {
  MockCustomRouteObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i20.Route<dynamic>? route,
    _i20.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i20.Route<dynamic>? route,
    _i20.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool debugObservingRoute(_i20.Route<dynamic>? route) => (super.noSuchMethod(
        Invocation.method(
          #debugObservingRoute,
          [route],
        ),
        returnValue: false,
      ) as bool);

  @override
  void subscribe(
    _i20.RouteAware? routeAware,
    _i20.Route<dynamic>? route,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            routeAware,
            route,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unsubscribe(_i20.RouteAware? routeAware) => super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [routeAware],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i20.Route<dynamic>? route,
    _i20.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i20.Route<dynamic>? newRoute,
    _i20.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i20.Route<dynamic>? topRoute,
    _i20.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeTop,
          [
            topRoute,
            previousTopRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i20.Route<dynamic>? route,
    _i20.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DeviceInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoService extends _i1.Mock implements _i21.DeviceInfoService {
  MockDeviceInfoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> get deviceID => (super.noSuchMethod(
        Invocation.getter(#deviceID),
        returnValue: _i7.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.getter(#deviceID),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i2.DeviceInfoPlugin> get deviceInfoPlugin => (super.noSuchMethod(
        Invocation.getter(#deviceInfoPlugin),
        returnValue:
            _i7.Future<_i2.DeviceInfoPlugin>.value(_FakeDeviceInfoPlugin_0(
          this,
          Invocation.getter(#deviceInfoPlugin),
        )),
      ) as _i7.Future<_i2.DeviceInfoPlugin>);

  @override
  _i7.Future<Map<String, dynamic>> get deviceData => (super.noSuchMethod(
        Invocation.getter(#deviceData),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<_i3.AddDeviceParams> get addDeviceParams => (super.noSuchMethod(
        Invocation.getter(#addDeviceParams),
        returnValue:
            _i7.Future<_i3.AddDeviceParams>.value(_FakeAddDeviceParams_1(
          this,
          Invocation.getter(#addDeviceParams),
        )),
      ) as _i7.Future<_i3.AddDeviceParams>);

  @override
  _i7.Future<bool> get isRooted => (super.noSuchMethod(
        Invocation.getter(#isRooted),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> get isPhysicalDevice => (super.noSuchMethod(
        Invocation.getter(#isPhysicalDevice),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> get isDevelopmentModeEnable => (super.noSuchMethod(
        Invocation.getter(#isDevelopmentModeEnable),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [PushNotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushNotificationService extends _i1.Mock
    implements _i23.PushNotificationService {
  MockPushNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> initialise(
          {required void Function({
            required bool isClicked,
            required bool isInitial,
            Map<String, dynamic>? handlePushData,
          })? handlePushData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
          {#handlePushData: handlePushData},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> getFcmToken() => (super.noSuchMethod(
        Invocation.method(
          #getFcmToken,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);
}

/// A class which mocks [SocialLoginService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocialLoginService extends _i1.Mock
    implements _i24.SocialLoginService {
  MockSocialLoginService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<_i24.SocialLoginResult> get socialLoginResultStream =>
      (super.noSuchMethod(
        Invocation.getter(#socialLoginResultStream),
        returnValue: _i7.Stream<_i24.SocialLoginResult>.empty(),
      ) as _i7.Stream<_i24.SocialLoginResult>);

  @override
  _i7.Future<_i7.Stream<_i24.SocialLoginResult>> initialise({
    required String? url,
    required String? anonKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
          {
            #url: url,
            #anonKey: anonKey,
          },
        ),
        returnValue: _i7.Future<_i7.Stream<_i24.SocialLoginResult>>.value(
            _i7.Stream<_i24.SocialLoginResult>.empty()),
      ) as _i7.Future<_i7.Stream<_i24.SocialLoginResult>>);

  @override
  _i7.Future<_i7.Stream<_i24.SocialLoginResult>> signInWithApple() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue: _i7.Future<_i7.Stream<_i24.SocialLoginResult>>.value(
            _i7.Stream<_i24.SocialLoginResult>.empty()),
      ) as _i7.Future<_i7.Stream<_i24.SocialLoginResult>>);

  @override
  _i7.Future<_i7.Stream<_i24.SocialLoginResult>> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i7.Future<_i7.Stream<_i24.SocialLoginResult>>.value(
            _i7.Stream<_i24.SocialLoginResult>.empty()),
      ) as _i7.Future<_i7.Stream<_i24.SocialLoginResult>>);

  @override
  _i7.Future<_i7.Stream<_i24.SocialLoginResult>> signInWithFaceBook() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithFaceBook,
          [],
        ),
        returnValue: _i7.Future<_i7.Stream<_i24.SocialLoginResult>>.value(
            _i7.Stream<_i24.SocialLoginResult>.empty()),
      ) as _i7.Future<_i7.Stream<_i24.SocialLoginResult>>);

  @override
  _i7.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [PaymentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentService extends _i1.Mock implements _i16.PaymentService {
  MockPaymentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> triggerPaymentSheet({
    required String? billingCountryCode,
    required String? paymentIntentClientSecret,
    required String? customerId,
    required String? customerEphemeralKeySecret,
    String? merchantDisplayName = 'Esim',
    bool? testEnv = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #triggerPaymentSheet,
          [],
          {
            #billingCountryCode: billingCountryCode,
            #paymentIntentClientSecret: paymentIntentClientSecret,
            #customerId: customerId,
            #customerEphemeralKeySecret: customerEphemeralKeySecret,
            #merchantDisplayName: merchantDisplayName,
            #testEnv: testEnv,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> initializePaymentKeys({
    required String? publishableKey,
    String? merchantIdentifier,
    String? urlScheme,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializePaymentKeys,
          [],
          {
            #publishableKey: publishableKey,
            #merchantIdentifier: merchantIdentifier,
            #urlScheme: urlScheme,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i25.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<int?> getInt(_i25.SecureStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<bool?> getBool(_i25.SecureStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i7.Future<bool?>.value(),
      ) as _i7.Future<bool?>);

  @override
  _i7.Future<double?> getDouble(_i25.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: _i7.Future<double?>.value(),
      ) as _i7.Future<double?>);

  @override
  _i7.Future<String?> getString(_i25.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<List<String>?> getStringList(_i25.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValue: _i7.Future<List<String>?>.value(),
      ) as _i7.Future<List<String>?>);

  @override
  _i7.Future<bool> containsKey(_i25.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> setInt(
    _i25.SecureStorageKeys? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setBool(
    _i25.SecureStorageKeys? key, {
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [key],
          {#value: value},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setDouble(
    _i25.SecureStorageKeys? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setString(
    _i25.SecureStorageKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setStringList(
    _i25.SecureStorageKeys? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> remove(_i25.SecureStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [RedirectionsHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRedirectionsHandlerService extends _i1.Mock
    implements _i18.RedirectionsHandlerService {
  MockRedirectionsHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> handleInitialRedirection(void Function()? callBack) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleInitialRedirection,
          [callBack],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void redirectToRoute({required _i26.InAppRedirection? redirection}) =>
      super.noSuchMethod(
        Invocation.method(
          #redirectToRoute,
          [],
          {#redirection: redirection},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void serialiseAndRedirectNotification({
    required bool? isClicked,
    required bool? isInitial,
    Map<String, dynamic>? handlePushData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #serialiseAndRedirectNotification,
          [],
          {
            #isClicked: isClicked,
            #isInitial: isInitial,
            #handlePushData: handlePushData,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void serialiseAndRedirectDeepLink({
    required bool? isInitial,
    required Uri? uriDeepLinkData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #serialiseAndRedirectDeepLink,
          [],
          {
            #isInitial: isInitial,
            #uriDeepLinkData: uriDeepLinkData,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notificationInboxRedirections({
    required String? iccid,
    required String? category,
    required bool? isUnlimitedData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notificationInboxRedirections,
          [],
          {
            #iccid: iccid,
            #category: category,
            #isUnlimitedData: isUnlimitedData,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i5.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  String get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as String);

  @override
  String get languageCode => (super.noSuchMethod(
        Invocation.getter(#languageCode),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        ),
      ) as String);

  @override
  int? getInt(_i5.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  bool? getBool(_i5.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  double? getDouble(_i5.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(_i5.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  List<String>? getStringList(_i5.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  bool containsKey(_i5.LocalStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<bool> setInt(
    _i5.LocalStorageKeys? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setBool(
    _i5.LocalStorageKeys? key, {
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [key],
          {#value: value},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setDouble(
    _i5.LocalStorageKeys? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setString(
    _i5.LocalStorageKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setStringList(
    _i5.LocalStorageKeys? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> remove(_i5.LocalStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setBiometricEnabled({bool? value}) => (super.noSuchMethod(
        Invocation.method(
          #setBiometricEnabled,
          [],
          {#value: value},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> saveLoginResponse(_i27.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLoginResponse,
          [authResponse],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [AppConfigurationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppConfigurationService extends _i1.Mock
    implements _i28.AppConfigurationService {
  MockAppConfigurationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> get getSupabaseUrl => (super.noSuchMethod(
        Invocation.getter(#getSupabaseUrl),
        returnValue: _i7.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.getter(#getSupabaseUrl),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> get getSupabaseAnon => (super.noSuchMethod(
        Invocation.getter(#getSupabaseAnon),
        returnValue: _i7.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.getter(#getSupabaseAnon),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> get getWhatsAppNumber => (super.noSuchMethod(
        Invocation.getter(#getWhatsAppNumber),
        returnValue: _i7.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.getter(#getWhatsAppNumber),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> get getCatalogVersion => (super.noSuchMethod(
        Invocation.getter(#getCatalogVersion),
        returnValue: _i7.Future<String>.value(_i22.dummyValue<String>(
          this,
          Invocation.getter(#getCatalogVersion),
        )),
      ) as _i7.Future<String>);

  @override
  String get getDefaultCurrency => (super.noSuchMethod(
        Invocation.getter(#getDefaultCurrency),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#getDefaultCurrency),
        ),
      ) as String);

  @override
  _i7.Future<void> getAppConfigurations() => (super.noSuchMethod(
        Invocation.method(
          #getAppConfigurations,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [FlutterChannelHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterChannelHandlerService extends _i1.Mock
    implements _i19.FlutterChannelHandlerService {
  MockFlutterChannelHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> openSimProfilesSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSimProfilesSettings,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openEsimSetupForIOS({
    required String? smdpAddress,
    required String? activationCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openEsimSetupForIOS,
          [],
          {
            #smdpAddress: smdpAddress,
            #activationCode: activationCode,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openEsimSetupForAndroid({
    required String? smdpAddress,
    required String? activationCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openEsimSetupForAndroid,
          [],
          {
            #smdpAddress: smdpAddress,
            #activationCode: activationCode,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i12.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addListener(_i29.ConnectionListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i29.ConnectionListener? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [ApiAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiAuthRepository extends _i1.Mock implements _i30.ApiAuthRepository {
  MockApiAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> login({required String? email}) =>
      (super.noSuchMethod(Invocation.method(
        #login,
        [],
        {#email: email},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> resendOtp({required String? email}) =>
      (super.noSuchMethod(Invocation.method(
        #resendOtp,
        [],
        {#email: email},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> verifyOtp({
    String? email = '',
    String? pinCode = '',
    String? providerToken = '',
    String? providerType = '',
  }) =>
      (super.noSuchMethod(Invocation.method(
        #verifyOtp,
        [],
        {
          #email: email,
          #pinCode: pinCode,
          #providerToken: providerToken,
          #providerType: providerType,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> updateUserInfo({
    required String? msisdn,
    required String? firstName,
    required String? lastName,
    required bool? isNewsletterSubscribed,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #updateUserInfo,
        [],
        {
          #msisdn: msisdn,
          #firstName: firstName,
          #lastName: lastName,
          #isNewsletterSubscribed: isNewsletterSubscribed,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<_i4.Resource<_i27.AuthResponseModel>> refreshTokenAPITrigger() =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshTokenAPITrigger,
          [],
        ),
        returnValue: _i7.Future<_i4.Resource<_i27.AuthResponseModel>>.value(
            _FakeResource_2<_i27.AuthResponseModel>(
          this,
          Invocation.method(
            #refreshTokenAPITrigger,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i4.Resource<_i27.AuthResponseModel>>);

  @override
  void addUnauthorizedAccessListener(
          _i31.UnauthorizedAccessListener? unauthorizedAccessCallBack) =>
      super.noSuchMethod(
        Invocation.method(
          #addUnauthorizedAccessListener,
          [unauthorizedAccessCallBack],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUnauthorizedAccessListener(
          _i31.UnauthorizedAccessListener? unauthorizedAccessCallBack) =>
      super.noSuchMethod(
        Invocation.method(
          #removeUnauthorizedAccessListener,
          [unauthorizedAccessCallBack],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAuthReloadListenerCallBack(
          _i32.AuthReloadListener? authReloadListener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAuthReloadListenerCallBack,
          [authReloadListener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAuthReloadListenerCallBack(
          _i32.AuthReloadListener? authReloadListener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeAuthReloadListenerCallBack,
          [authReloadListener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.FutureOr<dynamic> tmpLogin({required String? email}) =>
      (super.noSuchMethod(Invocation.method(
        #tmpLogin,
        [],
        {#email: email},
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [ApiAppRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiAppRepository extends _i1.Mock implements _i33.ApiAppRepository {
  MockApiAppRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> addDevice({
    required String? fcmToken,
    required String? manufacturer,
    required String? deviceModel,
    required String? deviceOs,
    required String? deviceOsVersion,
    required String? appVersion,
    required String? ramSize,
    required String? screenResolution,
    required bool? isRooted,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #addDevice,
        [],
        {
          #fcmToken: fcmToken,
          #manufacturer: manufacturer,
          #deviceModel: deviceModel,
          #deviceOs: deviceOs,
          #deviceOsVersion: deviceOsVersion,
          #appVersion: appVersion,
          #ramSize: ramSize,
          #screenResolution: screenResolution,
          #isRooted: isRooted,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> contactUs({
    required String? email,
    required String? message,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #contactUs,
        [],
        {
          #email: email,
          #message: message,
        },
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [APIBundles].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIBundles extends _i1.Mock implements _i34.APIBundles {
  MockAPIBundles() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> getBundleConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleConsumption,
        [],
        {#iccID: iccID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundle({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundle,
        [],
        {#code: code},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundlesByRegion({required String? regionCode}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [],
        {#regionCode: regionCode},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundlesByCountries(
          {required String? countryCodes}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountries,
        [],
        {#countryCodes: countryCodes},
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [ApiUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiUser extends _i1.Mock implements _i35.ApiUser {
  MockApiUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> getUserConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getUserConsumption,
        [],
        {#iccID: iccID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> assignBundle({
    required String? bundleCode,
    required String? promoCode,
    required String? referralCode,
    required String? affiliateCode,
    required String? paymentType,
    required _i36.RelatedSearchRequestModel? relatedSearch,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #assignBundle,
        [],
        {
          #bundleCode: bundleCode,
          #promoCode: promoCode,
          #referralCode: referralCode,
          #affiliateCode: affiliateCode,
          #paymentType: paymentType,
          #relatedSearch: relatedSearch,
          #bearerToken: bearerToken,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> topUpBundle({
    required String? iccID,
    required String? bundleCode,
    required String? paymentType,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpBundle,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
          #paymentType: paymentType,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getUserNotifications({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getUserNotifications,
        [],
        {
          #pageIndex: pageIndex,
          #pageSize: pageSize,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundleExists({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleExists,
        [],
        {#code: code},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundleLabel({
    required String? code,
    required String? label,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleLabel,
        [],
        {
          #code: code,
          #label: label,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getMyEsimByIccID({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByIccID,
        [],
        {#iccID: iccID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getMyEsimByOrder({
    required String? orderID,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByOrder,
        [],
        {
          #orderID: orderID,
          #bearerToken: bearerToken,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getRelatedTopUp({
    required String? iccID,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getRelatedTopUp,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getOrderHistory({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderHistory,
        [],
        {
          #pageIndex: pageIndex,
          #pageSize: pageSize,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getOrderByID({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderByID,
        [],
        {#orderID: orderID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> topUpWallet({
    required double? amount,
    required String? currency,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpWallet,
        [],
        {
          #amount: amount,
          #currency: currency,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> cancelOrder({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #cancelOrder,
        [],
        {#orderID: orderID},
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [ApiBundlesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiBundlesRepository extends _i1.Mock
    implements _i37.ApiBundlesRepository {
  MockApiBundlesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<_i38.BundleServicesStreamModel> get homeDataStream =>
      (super.noSuchMethod(
        Invocation.getter(#homeDataStream),
        returnValue: _i7.Stream<_i38.BundleServicesStreamModel>.empty(),
      ) as _i7.Stream<_i38.BundleServicesStreamModel>);

  @override
  _i7.FutureOr<_i4.Resource<_i39.BundleConsumptionResponse?>>
      getBundleConsumption({required String? iccID}) => (super.noSuchMethod(
            Invocation.method(
              #getBundleConsumption,
              [],
              {#iccID: iccID},
            ),
            returnValue:
                _i7.Future<_i4.Resource<_i39.BundleConsumptionResponse?>>.value(
                    _FakeResource_2<_i39.BundleConsumptionResponse?>(
              this,
              Invocation.method(
                #getBundleConsumption,
                [],
                {#iccID: iccID},
              ),
            )),
          ) as _i7.FutureOr<_i4.Resource<_i39.BundleConsumptionResponse?>>);

  @override
  _i7.FutureOr<dynamic> getBundle({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundle,
        [],
        {#code: code},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundlesByRegion({required String? regionCode}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [],
        {#regionCode: regionCode},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundlesByCountries(
          {required String? countryCodes}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountries,
        [],
        {#countryCodes: countryCodes},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<_i7.Stream<_i38.BundleServicesStreamModel>> getHomeData({
    required _i7.Future<_i38.HomeDataVersionResult>? version,
    bool? forceRefresh = false,
    bool? isFromRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
          {
            #version: version,
            #forceRefresh: forceRefresh,
            #isFromRefresh: isFromRefresh,
          },
        ),
        returnValue:
            _i7.Future<_i7.Stream<_i38.BundleServicesStreamModel>>.value(
                _i7.Stream<_i38.BundleServicesStreamModel>.empty()),
      ) as _i7.FutureOr<_i7.Stream<_i38.BundleServicesStreamModel>>);

  @override
  _i7.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ApiUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiUserRepository extends _i1.Mock implements _i40.ApiUserRepository {
  MockApiUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> getUserConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getUserConsumption,
        [],
        {#iccID: iccID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> assignBundle({
    required String? bundleCode,
    required String? promoCode,
    required String? referralCode,
    required String? affiliateCode,
    required String? paymentType,
    required _i36.RelatedSearchRequestModel? relatedSearch,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #assignBundle,
        [],
        {
          #bundleCode: bundleCode,
          #promoCode: promoCode,
          #referralCode: referralCode,
          #affiliateCode: affiliateCode,
          #paymentType: paymentType,
          #relatedSearch: relatedSearch,
          #bearerToken: bearerToken,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> topUpBundle({
    required String? iccID,
    required String? bundleCode,
    required String? paymentType,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpBundle,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
          #paymentType: paymentType,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<
      _i4.Resource<List<_i41.UserNotificationModel>>> getUserNotifications({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotifications,
          [],
          {
            #pageIndex: pageIndex,
            #pageSize: pageSize,
          },
        ),
        returnValue:
            _i7.Future<_i4.Resource<List<_i41.UserNotificationModel>>>.value(
                _FakeResource_2<List<_i41.UserNotificationModel>>(
          this,
          Invocation.method(
            #getUserNotifications,
            [],
            {
              #pageIndex: pageIndex,
              #pageSize: pageSize,
            },
          ),
        )),
      ) as _i7.FutureOr<_i4.Resource<List<_i41.UserNotificationModel>>>);

  @override
  _i7.FutureOr<dynamic> getBundleExists({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleExists,
        [],
        {#code: code},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getBundleLabel({
    required String? code,
    required String? label,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleLabel,
        [],
        {
          #code: code,
          #label: label,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getMyEsimByIccID({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByIccID,
        [],
        {#iccID: iccID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getMyEsimByOrder({
    required String? orderID,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByOrder,
        [],
        {
          #orderID: orderID,
          #bearerToken: bearerToken,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> getRelatedTopUp({
    required String? iccID,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getRelatedTopUp,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<
      _i4.Resource<List<_i42.OrderHistoryResponseModel>?>> getOrderHistory({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderHistory,
          [],
          {
            #pageIndex: pageIndex,
            #pageSize: pageSize,
          },
        ),
        returnValue: _i7
            .Future<_i4.Resource<List<_i42.OrderHistoryResponseModel>?>>.value(
            _FakeResource_2<List<_i42.OrderHistoryResponseModel>?>(
          this,
          Invocation.method(
            #getOrderHistory,
            [],
            {
              #pageIndex: pageIndex,
              #pageSize: pageSize,
            },
          ),
        )),
      ) as _i7.FutureOr<_i4.Resource<List<_i42.OrderHistoryResponseModel>?>>);

  @override
  _i7.FutureOr<dynamic> getOrderByID({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderByID,
        [],
        {#orderID: orderID},
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> topUpWallet({
    required double? amount,
    required String? currency,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpWallet,
        [],
        {
          #amount: amount,
          #currency: currency,
        },
      )) as _i7.FutureOr<dynamic>);

  @override
  _i7.FutureOr<dynamic> cancelOrder({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #cancelOrder,
        [],
        {#orderID: orderID},
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [ApiDeviceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiDeviceRepository extends _i1.Mock
    implements _i43.ApiDeviceRepository {
  MockApiDeviceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.FutureOr<dynamic> registerDevice({
    required String? fcmToken,
    required String? deviceId,
    required String? platformTag,
    required String? osTag,
    required String? appGuid,
    required String? version,
    required String? userGuid,
    required _i44.DeviceInfoRequestModel? deviceInfo,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #registerDevice,
        [],
        {
          #fcmToken: fcmToken,
          #deviceId: deviceId,
          #platformTag: platformTag,
          #osTag: osTag,
          #appGuid: appGuid,
          #version: version,
          #userGuid: userGuid,
          #deviceInfo: deviceInfo,
        },
      )) as _i7.FutureOr<dynamic>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i11.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i20.GlobalKey<_i20.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(Invocation.method(
        #nestedNavigationKey,
        [index],
      )) as _i20.GlobalKey<_i20.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i11.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T?>? navigateWithTransition<T>(
    _i20.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i20.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i11.Transition? transitionClass,
    _i11.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateWithTransition,
        [page],
        {
          #opaque: opaque,
          #transition: transition,
          #duration: duration,
          #popGesture: popGesture,
          #id: id,
          #curve: curve,
          #fullscreenDialog: fullscreenDialog,
          #preventDuplicates: preventDuplicates,
          #transitionClass: transitionClass,
          #transitionStyle: transitionStyle,
          #routeName: routeName,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? replaceWithTransition<T>(
    _i20.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i20.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i11.Transition? transitionClass,
    _i11.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #replaceWithTransition,
        [page],
        {
          #opaque: opaque,
          #transition: transition,
          #duration: duration,
          #popGesture: popGesture,
          #id: id,
          #curve: curve,
          #fullscreenDialog: fullscreenDialog,
          #preventDuplicates: preventDuplicates,
          #transitionClass: transitionClass,
          #transitionStyle: transitionStyle,
          #routeName: routeName,
        },
      )) as _i7.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
      ) as bool);

  @override
  void popUntil(
    _i20.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i20.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateTo,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
          #transition: transition,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? navigateToView<T>(
    _i20.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i20.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i11.Transition? transition,
    _i11.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateToView,
        [view],
        {
          #arguments: arguments,
          #id: id,
          #opaque: opaque,
          #curve: curve,
          #duration: duration,
          #fullscreenDialog: fullscreenDialog,
          #popGesture: popGesture,
          #preventDuplicates: preventDuplicates,
          #transition: transition,
          #transitionStyle: transitionStyle,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i20.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #replaceWith,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
          #transition: transition,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearStackAndShow,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #parameters: parameters,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? clearStackAndShowView<T>(
    _i20.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearStackAndShowView,
        [view],
        {
          #arguments: arguments,
          #id: id,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearTillFirstAndShow,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? clearTillFirstAndShowView<T>(
    _i20.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearTillFirstAndShowView,
        [view],
        {
          #arguments: arguments,
          #id: id,
        },
      )) as _i7.Future<T?>?);

  @override
  _i7.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i20.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #pushNamedAndRemoveUntil,
        [routeName],
        {
          #predicate: predicate,
          #arguments: arguments,
          #id: id,
        },
      )) as _i7.Future<T?>?);
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i11.DialogService {
  MockDialogService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i11.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i20.Widget Function(
      _i20.BuildContext,
      _i11.DialogRequest<dynamic>,
      dynamic Function(_i11.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i11.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i6.Color? cancelTitleColor,
    String? buttonTitle = 'Ok',
    _i6.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i20.RouteSettings? routeSettings,
    _i20.GlobalKey<_i20.NavigatorState>? navigatorKey,
    _i11.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i7.Future<_i11.DialogResponse<dynamic>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<dynamic>?>);

  @override
  _i7.Future<_i11.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = '',
    bool? useSafeArea = true,
    _i20.RouteSettings? routeSettings,
    _i20.GlobalKey<_i20.NavigatorState>? navigatorKey,
    _i20.RouteTransitionsBuilder? transitionBuilder,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #transitionBuilder: transitionBuilder,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i7.Future<_i11.DialogResponse<T>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<T>?>);

  @override
  _i7.Future<_i11.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = 'Cancel',
    _i6.Color? cancelTitleColor,
    String? confirmationTitle = 'Ok',
    _i6.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i20.RouteSettings? routeSettings,
    _i11.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i7.Future<_i11.DialogResponse<dynamic>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i11.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SnackbarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSnackbarService extends _i1.Mock implements _i11.SnackbarService {
  MockSnackbarService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isSnackbarOpen => (super.noSuchMethod(
        Invocation.getter(#isSnackbarOpen),
        returnValue: false,
      ) as bool);

  @override
  void registerSnackbarConfig(_i11.SnackbarConfig? config) =>
      super.noSuchMethod(
        Invocation.method(
          #registerSnackbarConfig,
          [config],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomMainButtonBuilder({
    dynamic variant,
    _i20.Widget Function(
      String?,
      Function?,
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomMainButtonBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomSnackbarConfig({
    required dynamic variant,
    _i11.SnackbarConfig? config,
    _i11.SnackbarConfig Function()? configBuilder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomSnackbarConfig,
          [],
          {
            #variant: variant,
            #config: config,
            #configBuilder: configBuilder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSnackbar({
    String? title = '',
    required String? message,
    dynamic Function(dynamic)? onTap,
    Duration? duration,
    String? mainButtonTitle,
    void Function()? onMainButtonTapped,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackbar,
          [],
          {
            #title: title,
            #message: message,
            #onTap: onTap,
            #duration: duration,
            #mainButtonTitle: mainButtonTitle,
            #onMainButtonTapped: onMainButtonTapped,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<dynamic>? showCustomSnackBar({
    required String? message,
    _i20.TextStyle? messageTextStyle,
    required dynamic variant,
    String? title,
    _i20.TextStyle? titleTextStyle,
    String? mainButtonTitle,
    _i20.ButtonStyle? mainButtonStyle,
    void Function()? onMainButtonTapped,
    Function? onTap,
    Duration? duration,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #showCustomSnackBar,
        [],
        {
          #message: message,
          #messageTextStyle: messageTextStyle,
          #variant: variant,
          #title: title,
          #titleTextStyle: titleTextStyle,
          #mainButtonTitle: mainButtonTitle,
          #mainButtonStyle: mainButtonStyle,
          #onMainButtonTapped: onMainButtonTapped,
          #onTap: onTap,
          #duration: duration,
        },
      )) as _i7.Future<dynamic>?);

  @override
  _i7.Future<void> closeSnackbar() => (super.noSuchMethod(
        Invocation.method(
          #closeSnackbar,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i11.BottomSheetService {
  MockBottomSheetService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setCustomSheetBuilders(Map<dynamic, _i11.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i11.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = 'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i7.Future<_i11.SheetResponse<dynamic>?>.value(),
      ) as _i7.Future<_i11.SheetResponse<dynamic>?>);

  @override
  _i7.Future<_i11.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = '',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i7.Future<_i11.SheetResponse<T>?>.value(),
      ) as _i7.Future<_i11.SheetResponse<T>?>);

  @override
  void completeSheet(_i11.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i14.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get themeCount => (super.noSuchMethod(
        Invocation.getter(#themeCount),
        returnValue: 0,
      ) as int);

  @override
  bool get isDarkMode => (super.noSuchMethod(
        Invocation.getter(#isDarkMode),
        returnValue: false,
      ) as bool);

  @override
  _i14.ThemeManagerMode get selectedThemeMode => (super.noSuchMethod(
        Invocation.getter(#selectedThemeMode),
        returnValue: _i14.ThemeManagerMode.light,
      ) as _i14.ThemeManagerMode);

  @override
  void setThemeManager(_i45.ThemeManager? manager) => super.noSuchMethod(
        Invocation.method(
          #setThemeManager,
          [manager],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<dynamic> selectThemeAtIndex(int? themeIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectThemeAtIndex,
          [themeIndex],
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void toggleDarkLightTheme() => super.noSuchMethod(
        Invocation.method(
          #toggleDarkLightTheme,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemeMode(_i14.ThemeManagerMode? themeManagerMode) =>
      super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [themeManagerMode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemes({
    _i20.ThemeData? lightTheme,
    _i20.ThemeData? darkTheme,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setThemes,
          [],
          {
            #lightTheme: lightTheme,
            #darkTheme: darkTheme,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MainViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainViewModel extends _i1.Mock implements _i46.MainViewModel {
  MockMainViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> onModelReady() => (super.noSuchMethod(
        Invocation.method(
          #onModelReady,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.Locale getDefaultLocale() => (super.noSuchMethod(
        Invocation.method(
          #getDefaultLocale,
          [],
        ),
        returnValue: _FakeLocale_4(
          this,
          Invocation.method(
            #getDefaultLocale,
            [],
          ),
        ),
      ) as _i6.Locale);

  @override
  _i7.Future<void> onUnauthorizedAccessCallBackUseCase(
    _i48.BaseResponse? response,
    Exception? e,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUnauthorizedAccessCallBackUseCase,
          [
            response,
            e,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onAuthReloadListenerCallBackUseCase(
          _i49.ResponseMain<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAuthReloadListenerCallBackUseCase,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i6.Locale> getLocaleList() => (super.noSuchMethod(
        Invocation.method(
          #getLocaleList,
          [],
        ),
        returnValue: <_i6.Locale>[],
      ) as List<_i6.Locale>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MyESimViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyESimViewModel extends _i1.Mock implements _i10.MyESimViewModel {
  MockMyESimViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetUserNotificationsUseCase get getUserNotificationsUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#getUserNotificationsUseCase),
        returnValue: _FakeGetUserNotificationsUseCase_6(
          this,
          Invocation.getter(#getUserNotificationsUseCase),
        ),
      ) as _i8.GetUserNotificationsUseCase);

  @override
  _i9.GetBundleLabelUseCase get getBundleLabelUseCase => (super.noSuchMethod(
        Invocation.getter(#getBundleLabelUseCase),
        returnValue: _FakeGetBundleLabelUseCase_7(
          this,
          Invocation.getter(#getBundleLabelUseCase),
        ),
      ) as _i9.GetBundleLabelUseCase);

  @override
  bool get isInstallationFailed => (super.noSuchMethod(
        Invocation.getter(#isInstallationFailed),
        returnValue: false,
      ) as bool);

  @override
  set isInstallationFailed(bool? _isInstallationFailed) => super.noSuchMethod(
        Invocation.setter(
          #isInstallationFailed,
          _isInstallationFailed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.ESimState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeESimState_8(
          this,
          Invocation.getter(#state),
        ),
      ) as _i10.ESimState);

  @override
  set setTabIndex(int? index) => super.noSuchMethod(
        Invocation.setter(
          #setTabIndex,
          index,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_9(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i11.DialogService);

  @override
  _i11.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_10(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i11.SnackbarService);

  @override
  _i12.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_11(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i12.ConnectivityService);

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i11.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_12(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i11.BottomSheetService);

  @override
  _i11.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i11.NavigationService);

  @override
  _i13.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_14(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i13.NavigationRouter);

  @override
  _i14.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_15(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i14.ThemeService);

  @override
  _i15.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_16(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i15.UserService);

  @override
  _i16.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_17(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i16.PaymentService);

  @override
  _i17.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_18(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i17.UserAuthenticationService);

  @override
  _i18.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_19(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i18.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_20(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i19.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_21(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i19.FlutterChannelHandlerService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  set routeName(String? _routeName) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          _routeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shimmerHeight(double? _shimmerHeight) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          _shimmerHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i6.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_22(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i6.Color);

  @override
  _i50.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i50.ViewState.idle,
      ) as _i50.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openDataPlans() => super.noSuchMethod(
        Invocation.method(
          #openDataPlans,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notificationsButtonTapped() => super.noSuchMethod(
        Invocation.method(
          #notificationsButtonTapped,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onTopUpClick({required int? index}) => (super.noSuchMethod(
        Invocation.method(
          #onTopUpClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConsumptionClick({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConsumptionClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onQrCodeClick({required int? index}) => (super.noSuchMethod(
        Invocation.method(
          #onQrCodeClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onInstallClick({required int? index}) => (super.noSuchMethod(
        Invocation.method(
          #onInstallClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onEditNameClick({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onEditNameClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToLoading(String? orderID) => (super.noSuchMethod(
        Invocation.method(
          #navigateToLoading,
          [orderID],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onCurrentBundleClick({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCurrentBundleClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onExpiredBundleClick({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onExpiredBundleClick,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshCurrentPlans() => (super.noSuchMethod(
        Invocation.method(
          #refreshCurrentPlans,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleNotificationBadge() => (super.noSuchMethod(
        Invocation.method(
          #handleNotificationBadge,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshScreen({bool? isSilent = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshScreen,
          [],
          {#isSilent: isSilent},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> fetchESimData({bool? isSilent = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchESimData,
          [],
          {#isSilent: isSilent},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i51.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i50.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<
      _i11.DialogResponse<_i52.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i20.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i53.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>);

  @override
  _i7.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool isKeyboardVisible(_i20.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToHomePager<T>(
          {_i26.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i7.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i7.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProfileViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileViewModel extends _i1.Mock implements _i54.ProfileViewModel {
  MockProfileViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get appVersion => (super.noSuchMethod(
        Invocation.getter(#appVersion),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#appVersion),
        ),
      ) as String);

  @override
  String get buildNumber => (super.noSuchMethod(
        Invocation.getter(#buildNumber),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#buildNumber),
        ),
      ) as String);

  @override
  _i11.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_9(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i11.DialogService);

  @override
  _i11.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_10(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i11.SnackbarService);

  @override
  _i12.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_11(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i12.ConnectivityService);

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i11.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_12(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i11.BottomSheetService);

  @override
  _i11.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i11.NavigationService);

  @override
  _i13.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_14(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i13.NavigationRouter);

  @override
  _i14.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_15(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i14.ThemeService);

  @override
  _i15.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_16(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i15.UserService);

  @override
  _i16.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_17(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i16.PaymentService);

  @override
  _i17.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_18(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i17.UserAuthenticationService);

  @override
  _i18.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_19(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i18.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_20(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i19.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_21(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i19.FlutterChannelHandlerService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  set routeName(String? _routeName) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          _routeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shimmerHeight(double? _shimmerHeight) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          _shimmerHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i6.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_22(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i6.Color);

  @override
  _i50.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i50.ViewState.idle,
      ) as _i50.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> getPackageInfo() => (super.noSuchMethod(
        Invocation.method(
          #getPackageInfo,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loginButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #loginButtonTapped,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  String getEmailAddress() => (super.noSuchMethod(
        Invocation.method(
          #getEmailAddress,
          [],
        ),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.method(
            #getEmailAddress,
            [],
          ),
        ),
      ) as String);

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i51.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i50.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<
      _i11.DialogResponse<_i52.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i20.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i53.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>);

  @override
  _i7.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool isKeyboardVisible(_i20.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToHomePager<T>(
          {_i26.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i7.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i7.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DataPlansViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataPlansViewModel extends _i1.Mock
    implements _i55.DataPlansViewModel {
  MockDataPlansViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetUserNotificationsUseCase get getUserNotificationsUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#getUserNotificationsUseCase),
        returnValue: _FakeGetUserNotificationsUseCase_6(
          this,
          Invocation.getter(#getUserNotificationsUseCase),
        ),
      ) as _i8.GetUserNotificationsUseCase);

  @override
  _i20.TextEditingController get searchTextFieldController =>
      (super.noSuchMethod(
        Invocation.getter(#searchTextFieldController),
        returnValue: _FakeTextEditingController_23(
          this,
          Invocation.getter(#searchTextFieldController),
        ),
      ) as _i20.TextEditingController);

  @override
  bool get showNotificationBadge => (super.noSuchMethod(
        Invocation.getter(#showNotificationBadge),
        returnValue: false,
      ) as bool);

  @override
  List<_i56.CountryResponseModel> get filteredCountries => (super.noSuchMethod(
        Invocation.getter(#filteredCountries),
        returnValue: <_i56.CountryResponseModel>[],
      ) as List<_i56.CountryResponseModel>);

  @override
  List<_i57.RegionsResponseModel> get filteredRegions => (super.noSuchMethod(
        Invocation.getter(#filteredRegions),
        returnValue: <_i57.RegionsResponseModel>[],
      ) as List<_i57.RegionsResponseModel>);

  @override
  List<_i51.BundleResponseModel> get filteredBundles => (super.noSuchMethod(
        Invocation.getter(#filteredBundles),
        returnValue: <_i51.BundleResponseModel>[],
      ) as List<_i51.BundleResponseModel>);

  @override
  List<_i51.BundleResponseModel> get filteredCruiseBundles =>
      (super.noSuchMethod(
        Invocation.getter(#filteredCruiseBundles),
        returnValue: <_i51.BundleResponseModel>[],
      ) as List<_i51.BundleResponseModel>);

  @override
  _i11.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_9(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i11.DialogService);

  @override
  _i11.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_10(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i11.SnackbarService);

  @override
  _i12.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_11(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i12.ConnectivityService);

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i11.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_12(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i11.BottomSheetService);

  @override
  _i11.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i11.NavigationService);

  @override
  _i13.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_14(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i13.NavigationRouter);

  @override
  _i14.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_15(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i14.ThemeService);

  @override
  _i15.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_16(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i15.UserService);

  @override
  _i16.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_17(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i16.PaymentService);

  @override
  _i17.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_18(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i17.UserAuthenticationService);

  @override
  _i18.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_19(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i18.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_20(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i19.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_21(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i19.FlutterChannelHandlerService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  set routeName(String? _routeName) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          _routeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shimmerHeight(double? _shimmerHeight) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          _shimmerHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i6.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_22(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i6.Color);

  @override
  _i50.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i50.ViewState.idle,
      ) as _i50.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTabBarChange(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onTabBarChange,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onCruiseTabBarChange(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onCruiseTabBarChange,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> loginButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #loginButtonTapped,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> notificationsButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #notificationsButtonTapped,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> fetchInitialData() => (super.noSuchMethod(
        Invocation.method(
          #fetchInitialData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToCountryBundles(
          _i56.CountryResponseModel? country) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToCountryBundles,
          [country],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToRegionBundles(_i57.RegionsResponseModel? region) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToRegionBundles,
          [region],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToEsimDetail(_i51.BundleResponseModel? bundle) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToEsimDetail,
          [bundle],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleNotificationBadge() => (super.noSuchMethod(
        Invocation.method(
          #handleNotificationBadge,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isBundleServicesBusy() => (super.noSuchMethod(
        Invocation.method(
          #isBundleServicesBusy,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i51.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i50.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<
      _i11.DialogResponse<_i52.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i20.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i53.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>);

  @override
  _i7.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool isKeyboardVisible(_i20.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToHomePager<T>(
          {_i26.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i7.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i7.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HomePagerViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePagerViewModel extends _i1.Mock
    implements _i58.HomePagerViewModel {
  MockHomePagerViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set redirection(_i26.InAppRedirection? _redirection) => super.noSuchMethod(
        Invocation.setter(
          #redirection,
          _redirection,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tabController(_i59.LockableTabController? controller) =>
      super.noSuchMethod(
        Invocation.setter(
          #tabController,
          controller,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lockTabBar(bool? lock) => super.noSuchMethod(
        Invocation.setter(
          #lockTabBar,
          lock,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_9(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i11.DialogService);

  @override
  _i11.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_10(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i11.SnackbarService);

  @override
  _i12.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_11(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i12.ConnectivityService);

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i11.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_12(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i11.BottomSheetService);

  @override
  _i11.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i11.NavigationService);

  @override
  _i13.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_14(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i13.NavigationRouter);

  @override
  _i14.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_15(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i14.ThemeService);

  @override
  _i15.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_16(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i15.UserService);

  @override
  _i16.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_17(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i16.PaymentService);

  @override
  _i17.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_18(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i17.UserAuthenticationService);

  @override
  _i18.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_19(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i18.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_20(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i19.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_21(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i19.FlutterChannelHandlerService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  set routeName(String? _routeName) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          _routeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shimmerHeight(double? _shimmerHeight) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          _shimmerHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i6.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_22(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i6.Color);

  @override
  _i50.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i50.ViewState.idle,
      ) as _i50.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void changeSelectedTabIndex({required int? index}) => super.noSuchMethod(
        Invocation.method(
          #changeSelectedTabIndex,
          [],
          {#index: index},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRelatedListeners({required _i20.BuildContext? context}) =>
      super.noSuchMethod(
        Invocation.method(
          #setRelatedListeners,
          [],
          {#context: context},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i51.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i50.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<
      _i11.DialogResponse<_i52.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i20.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i53.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>);

  @override
  _i7.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool isKeyboardVisible(_i20.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToHomePager<T>(
          {_i26.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i7.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i7.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PurchaseLoadingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchaseLoadingViewModel extends _i1.Mock
    implements _i60.PurchaseLoadingViewModel {
  MockPurchaseLoadingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set orderID(String? _orderID) => super.noSuchMethod(
        Invocation.setter(
          #orderID,
          _orderID,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set bearerToken(String? _bearerToken) => super.noSuchMethod(
        Invocation.setter(
          #bearerToken,
          _bearerToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isApiFetched => (super.noSuchMethod(
        Invocation.getter(#isApiFetched),
        returnValue: false,
      ) as bool);

  @override
  set isApiFetched(bool? _isApiFetched) => super.noSuchMethod(
        Invocation.setter(
          #isApiFetched,
          _isApiFetched,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_9(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i11.DialogService);

  @override
  _i11.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_10(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i11.SnackbarService);

  @override
  _i12.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_11(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i12.ConnectivityService);

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  _i11.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_12(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i11.BottomSheetService);

  @override
  _i11.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i11.NavigationService);

  @override
  _i13.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_14(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i13.NavigationRouter);

  @override
  _i14.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_15(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i14.ThemeService);

  @override
  _i15.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_16(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i15.UserService);

  @override
  _i16.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_17(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i16.PaymentService);

  @override
  _i17.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_18(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i17.UserAuthenticationService);

  @override
  _i18.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_19(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i18.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_20(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i19.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_21(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i19.FlutterChannelHandlerService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  set routeName(String? _routeName) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          _routeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set shimmerHeight(double? _shimmerHeight) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          _shimmerHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i6.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_22(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i6.Color);

  @override
  _i50.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i50.ViewState.idle,
      ) as _i50.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  List<_i47.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i47.ListenableServiceMixin>[],
      ) as List<_i47.ListenableServiceMixin>);

  @override
  List<_i47.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i47.ReactiveServiceMixin>[],
      ) as List<_i47.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> startTimer() => (super.noSuchMethod(
        Invocation.method(
          #startTimer,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> getOrderDetails() => (super.noSuchMethod(
        Invocation.method(
          #getOrderDetails,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  List<_i51.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i50.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<
      _i11.DialogResponse<_i52.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i20.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i53.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>.value(),
      ) as _i7.Future<_i11.DialogResponse<_i52.MainDialogResponse>?>);

  @override
  _i7.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool isKeyboardVisible(_i20.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> navigateToHomePager<T>(
          {_i26.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i7.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i7.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i22.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i7.Future<T> runBusyFuture<T>(
    _i7.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<T> runErrorFuture<T>(
    _i7.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i22.ifNotNull(
              _i22.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_5<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i15.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set accountList(List<_i61.AccountModel>? value) => super.noSuchMethod(
        Invocation.setter(
          #accountList,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAuthenticationService extends _i1.Mock
    implements _i17.UserAuthenticationService {
  MockUserAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_3(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i5.LocalStorageService);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  String get userPhoneNumber => (super.noSuchMethod(
        Invocation.getter(#userPhoneNumber),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#userPhoneNumber),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get referralCode => (super.noSuchMethod(
        Invocation.getter(#referralCode),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#referralCode),
        ),
      ) as String);

  @override
  String get walletCurrencyCode => (super.noSuchMethod(
        Invocation.getter(#walletCurrencyCode),
        returnValue: _i22.dummyValue<String>(
          this,
          Invocation.getter(#walletCurrencyCode),
        ),
      ) as String);

  @override
  double get walletAvailableBalance => (super.noSuchMethod(
        Invocation.getter(#walletAvailableBalance),
        returnValue: 0.0,
      ) as double);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  _i7.Future<void> saveUserResponse(_i27.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserResponse,
          [authResponse],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserResponse(_i27.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserResponse,
          [authResponse],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #clearUserInfo,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BundlesDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBundlesDataService extends _i1.Mock
    implements _i38.BundlesDataService {
  MockBundlesDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  List<_i51.BundleResponseModel>? getBundlesByCountry(String? iso3Code) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountry,
        [iso3Code],
      )) as List<_i51.BundleResponseModel>?);

  @override
  List<_i51.BundleResponseModel>? getBundlesByRegion(String? regionCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [regionCode],
      )) as List<_i51.BundleResponseModel>?);

  @override
  _i56.CountryResponseModel? getCountryByCode(String? iso3Code) =>
      (super.noSuchMethod(Invocation.method(
        #getCountryByCode,
        [iso3Code],
      )) as _i56.CountryResponseModel?);

  @override
  _i57.RegionsResponseModel? getRegionByCode(String? regionCode) =>
      (super.noSuchMethod(Invocation.method(
        #getRegionByCode,
        [regionCode],
      )) as _i57.RegionsResponseModel?);

  @override
  _i7.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearData() => (super.noSuchMethod(
        Invocation.method(
          #clearData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i62.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i7.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
